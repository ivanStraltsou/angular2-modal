{"version":3,"file":"dropin-preset.js","sourceRoot":"","sources":["dropin-preset.ts"],"names":[],"mappings":";;;;;;AACA,uBAA6B,wBAAwB,CAAC,CAAA;AAGtD,kCAAqE,sBAAsB,CAAC,CAAA;AAC5F,8BAAkD,iBAAiB,CAAC,CAAA;AAEpE,sBAAuB,0BAA0B,CAAC,CAAA;AAElD,IAAM,cAAc,GAAG;IACnB,8CAAS;IACT,uCAAO;IACP,KAAK,EAAE,IAAI;IACX,SAAS,EAAE,QAAQ;CACtB,CAAC;AAEF,IAAM,eAAe,GAAG;IACpB,OAAO;IACP,WAAW;IACX,aAAa;IACb,iBAAiB;CACpB,CAAC;AAEF;;GAEG;AACH;IAAkC,gCAAY;IAA9C;QAAkC,8BAAY;IAgC9C,CAAC;IAHG,sBAAI,mCAAS;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,qBAAY,CAAC,MAAM,CAAC;QACnD,CAAC;;;OAAA;IACL,mBAAC;AAAD,CAAC,AAhCD,CAAkC,4BAAY,GAgC7C;AAhCY,oBAAY,eAgCxB,CAAA;AAED;;GAEG;AACH;IAAyC,uCAAiC;IAuBtE,6BAAY,KAAY,EAAE,UAAwB,EAAE,aAAuC;QAAvC,6BAAuC,GAAvC,yBAAuC;QACvF,kBACI,KAAK,EACL,cAAM,CAAM,cAAM,CAAC,EAAC,YAAK,EAAE,sBAAU,EAAC,EAAE,cAAc,CAAC,EAAE,aAAa,IAAI,EAAE,CAAC,EAC7E,eAAe,EACf,YAAY,CACf,CAAC;IACN,CAAC;IAED,0CAAY,GAAZ,UAAa,MAAoB;QAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACxB,KAAK,qBAAY,CAAC,MAAM;gBACpB,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC;YACrC,KAAK,qBAAY,CAAC,OAAO;gBACrB,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC3C,CAAC;gBACD,KAAK,CAAC;QACd,CAAC;QACD,MAAM,CAAC,gBAAK,CAAC,YAAY,YAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IACL,0BAAC;AAAD,CAAC,AAhDD,CAAyC,mCAAmB,GAgD3D;AAhDY,2BAAmB,sBAgD/B,CAAA","sourcesContent":["import { ResolvedReflectiveProvider } from '@angular/core';\r\nimport { DROP_IN_TYPE } from '../../../models/tokens';\r\nimport { FluentAssignMethod } from '../../../framework/fluent-assign';\r\nimport { Modal } from '../modal';\r\nimport { DialogFormModal as component,  FormDropIn as content } from '../dialog-form-modal';\r\nimport { DialogPreset, DialogPresetBuilder } from './dialog-preset';\r\n\r\nimport { extend } from '../../../framework/utils';\r\n\r\nconst DEFAULT_VALUES = {\r\n    component,\r\n    content,\r\n    okBtn: 'OK',\r\n    cancelBtn: 'Cancel'\r\n};\r\n\r\nconst DEFAULT_SETTERS = [\r\n    'okBtn',\r\n    'cancelBtn',\r\n    'placeholder',\r\n    'showCloseButton'\r\n];\r\n\r\n/**\r\n * Data definition\r\n */\r\nexport class DropInPreset extends DialogPreset {\r\n\r\n    /**\r\n     * the message to display on the modal.\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * OK button caption.\r\n     * Default: OK\r\n     * Set to false ('', undefined, null, false) to remove button.\r\n     */\r\n    okBtn: string;\r\n\r\n    /**\r\n     * Cancel button caption.\r\n     * Default: Cancel\r\n     * Set to false ('', undefined, null, false) to remove button.\r\n     */\r\n    cancelBtn: string;\r\n\r\n    /**\r\n     * A placeholder for the input element.\r\n     * Valid only for prompt modal.\r\n     */\r\n    placeholder: string;\r\n\r\n    dropInType: DROP_IN_TYPE;\r\n\r\n    get showInput(): boolean {\r\n        return this.dropInType === DROP_IN_TYPE.prompt;\r\n    }\r\n}\r\n\r\n/**\r\n * A Preset representing all 3 drop ins (alert, prompt, confirm)\r\n */\r\nexport class DropInPresetBuilder extends DialogPresetBuilder<DropInPreset> {\r\n\r\n    /**\r\n     * the message to display on the modal.\r\n     */\r\n    message: FluentAssignMethod<string, this>;\r\n\r\n    /**\r\n     * The default Ok button caption.\r\n     */\r\n    okBtn: FluentAssignMethod<string, this>;\r\n\r\n    /**\r\n     * The default Cancel button caption.\r\n     */\r\n    cancelBtn: FluentAssignMethod<string, this>;\r\n\r\n    /**\r\n     * A placeholder for the input element.\r\n     * Valid only for prompt modal.\r\n     */\r\n    placeholder: FluentAssignMethod<string, this>;\r\n\r\n    constructor(modal: Modal, dropInType: DROP_IN_TYPE, defaultValues: DropInPreset = undefined) {\r\n        super(\r\n            modal,\r\n            extend<any>(extend({modal, dropInType}, DEFAULT_VALUES), defaultValues || {}),\r\n            DEFAULT_SETTERS,\r\n            DropInPreset\r\n        );\r\n    }\r\n\r\n    $$beforeOpen(config: DropInPreset): ResolvedReflectiveProvider[] {\r\n        if (config.okBtn) {\r\n            this.addOkButton(config.okBtn);\r\n        }\r\n\r\n        switch (config.dropInType) {\r\n            case DROP_IN_TYPE.prompt:\r\n                config.defaultResult = undefined;\r\n            case DROP_IN_TYPE.confirm:\r\n                if (config.cancelBtn) {\r\n                    this.addCancelButton(config.cancelBtn);\r\n                }\r\n                break;\r\n        }\r\n        return super.$$beforeOpen(config);\r\n    }\r\n}\r\n"]}