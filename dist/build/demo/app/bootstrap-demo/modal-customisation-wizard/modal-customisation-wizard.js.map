{"version":3,"file":"modal-customisation-wizard.js","sourceRoot":"","sources":["modal-customisation-wizard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AACxC,+BAAoB,uCAAuC,CAAC,CAAA;AAY5D;IAkBI,kCAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAjB/B,SAAI,GAAmC,OAAO,CAAC;QACxC,WAAM,GAAyB;YAClC,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,aAAa;YACpB,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,oBAAoB;YAC1B,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,EAAE;SACjB,CAAC;IAEgC,CAAC;IAEnC,8CAAW,GAAX;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAEpB,IAAI,MAAM,GAAgC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAClE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;gBAAC,QAAQ,CAAC;YAC7C,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,sBAAI,0CAAI;aAAR;YACI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,GAAG,WAAS,IAAI,CAAC,IAAI,SAAM,CAAC;YAEpC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;oBAAC,QAAQ,CAAC;gBAC7C,IAAI,IAAI,UAAQ,GAAG,UAAI,OAAO,KAAK,KAAK,QAAQ,GAAG,MAAI,KAAK,MAAG,GAAG,KAAK,SAAK,CAAC;YACrF,CAAC;YAEG,IAAI,IAAI,cAAc,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;;;OAAA;IAlDL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,WAAW,EACP,wFAAwF;SAC/F,CAAC;;gCAAA;IA+CF,+BAAC;AAAD,CAAC,AA9CD,IA8CC;AA9CY,gCAAwB,2BA8CpC,CAAA","sourcesContent":["import {Component} from '@angular/core';\r\nimport {Modal} from '../../../../components/angular2-modal';\r\nimport {\r\n    TwoButtonPreset,\r\n    TwoButtonPresetBuilder\r\n} from '../../../../components/angular2-modal/plugins/bootstrap/index';\r\n\r\n\r\n@Component({\r\n    selector: 'customize-wizard',\r\n    templateUrl:\r\n        'demo/app/bootstrap-demo/modal-customisation-wizard/modal-customisation-wizard.tpl.html'\r\n})\r\nexport class ModalCustomisationWizard {\r\n    type: 'alert' | 'prompt' | 'confirm' = 'alert';\r\n    public preset: TwoButtonPreset = <any>{\r\n        size: 'lg',\r\n        isBlocking: true,\r\n        showClose: true,\r\n        keyboard: 27,\r\n        dialogClass: '',\r\n        headerClass: '',\r\n        title: 'Hello World',\r\n        titleHtml: '',\r\n        body: 'A Customized Modal',\r\n        bodyClass: '',\r\n        footerClass: '',\r\n        okBtn: '',\r\n        okBtnClass: '',\r\n    };\r\n\r\n    constructor(public modal: Modal) {}\r\n\r\n    createModal() {\r\n        let p = this.preset;\r\n\r\n        let fluent: TwoButtonPresetBuilder = <any>this.modal[this.type]();\r\n        for (let key in p) {\r\n            let value = p[key];\r\n            if (value === null || value === '') continue;\r\n            fluent[key](value);\r\n        }\r\n\r\n        fluent.open();\r\n    }\r\n\r\n    get code(): string {\r\n        let p = this.preset,\r\n            code = `modal.${this.type}()\\n`;\r\n\r\n        for (let key in p) {\r\n            let value = p[key];\r\n            if (value === null || value === '') continue;\r\n            code += `    .${key}(${typeof value === 'string' ? `'${value}'` : value})\\n`;\r\n    }\r\n\r\n        code += '    .open();';\r\n        return code;\r\n    }\r\n}\r\n"]}