{"version":3,"file":"js-native-modal-renderer.js","sourceRoot":"","sources":["js-native-modal-renderer.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAKO,eAAe,CAAC,CAAA;AAGvB,uBAA4C,qBAAqB,CAAC,CAAA;AAIlE;IAAA;IA+BA,CAAC;IA7BG,sCAAM,GAAN,UAAO,IAAU,EACV,aAA+B,EAC/B,QAAsC,EACtC,MAAuC;QAE1C,IAAI,MAAwB,CAAC;QAC7B,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAChC,KAAK,qBAAY,CAAC,KAAK;gBACnB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACrC,MAAM,GAAG,IAAI,CAAC;gBACd,KAAK,CAAC;YACV,KAAK,qBAAY,CAAC,MAAM;gBACpB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBAC7E,KAAK,CAAC;YACV,KAAK,qBAAY,CAAC,OAAO;gBACrB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAChD,KAAK,CAAC;QACd,CAAC;QAED,MAAM,CAAC,OAAO,GAAG,cAAO,CAAC,CAAC;QAE1B,EAAE,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IA/BL;QAAC,iBAAU,EAAE;;6BAAA;IAgCb,4BAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,6BAAqB,wBA+BjC,CAAA","sourcesContent":["import {\r\n    ViewContainerRef,\r\n    ResolvedReflectiveProvider,\r\n    Injectable,\r\n    Type\r\n} from '@angular/core';\r\n\r\nimport { DialogRef } from '../../models/dialog-ref';\r\nimport { ModalRenderer, DROP_IN_TYPE } from '../../models/tokens';\r\nimport { JSNativeModalContext } from './modal-context';\r\n\r\n@Injectable()\r\nexport class JSNativeModalRenderer implements ModalRenderer {\r\n\r\n    render(type: Type,\r\n           viewContainer: ViewContainerRef,\r\n           bindings: ResolvedReflectiveProvider[],\r\n           dialog: DialogRef<JSNativeModalContext>): DialogRef<any> {\r\n\r\n        let result: string | boolean;\r\n        switch (dialog.context.dialogType) {\r\n            case DROP_IN_TYPE.alert:\r\n                window.alert(dialog.context.message);\r\n                result = true;\r\n                break;\r\n            case DROP_IN_TYPE.prompt:\r\n                result = window.prompt(dialog.context.message, dialog.context.promptDefault);\r\n                break;\r\n            case DROP_IN_TYPE.confirm:\r\n                result = window.confirm(dialog.context.message);\r\n                break;\r\n        }\r\n\r\n        dialog.destroy = () => {};\r\n\r\n        if (result === false) {\r\n            dialog.dismiss();\r\n        } else {\r\n            dialog.close(result);\r\n        }\r\n\r\n        return dialog;\r\n    }\r\n}\r\n\r\n"]}