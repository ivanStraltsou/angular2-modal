{"version":3,"file":"modal-backdrop.js","sourceRoot":"","sources":["modal-backdrop.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAIO,eAAe,CAAC,CAAA;AACvB,2BAA0B,yBAAyB,CAAC,CAAA;AACpD,sBAAsB,SAAS,CAAC,CAAA;AAEhC,sBAA4B,uBAAuB,CAAC,CAAA;AAEpD,IAAI,cAAc,GAAG,CAAC,CAAC;AAEvB;;GAEG;AAwBH;IAGI,0BACY,MAAkC,EAClC,MAAa;QADb,WAAM,GAAN,MAAM,CAA4B;QAClC,WAAM,GAAN,MAAM,CAAO;QAJjB,OAAE,GAAQ,EAAE,CAAC;QAKjB,cAAc,EAAE,CAAC;QACjB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;YACxB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IAED,sBAAI,sCAAQ;aAAZ;YACI,MAAM,CAAC,mBAAiB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAW,CAAC;QAC5D,CAAC;;;OAAA;IAED,sCAAW,GAAX;QACI,EAAE,CAAC,CAAC,EAAE,cAAc,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IAED,2CAAgB,GAAhB,UAAiB,KAAoB;QACjC,kDAAkD;QAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,CAAC;QAEhD,EAAE,CAAC,CAAC,mBAAW,CAAC,KAAK,CAAC,OAAO,EAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;IACL,CAAC;IAxDL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,IAAI,EAAE;gBACF,oBAAoB,EAAE,kBAAkB;gBACxC,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,OAAO;gBACzB,eAAe,EAAE,OAAO;gBACxB,aAAa,EAAE,OAAO;gBACtB,cAAc,EAAE,OAAO;gBACvB,eAAe,EAAE,OAAO;gBACxB,gBAAgB,EAAE,OAAO;gBACzB,gBAAgB,EAAE,0BAA0B;aAC/C;YACD,SAAS,EAAE;gBACP,0DAA0D;aAC7D;YACD,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EACZ,0IAGO;SACN,CAAC;;wBAAA;IAmCF,uBAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCY,wBAAgB,mBAkC5B,CAAA","sourcesContent":["import {\r\n    Component,\r\n    ViewEncapsulation,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { DialogRef } from '../../models/dialog-ref';\r\nimport { Modal } from './modal';\r\nimport { VEXModalContext } from './modal-context';\r\nimport { supportsKey } from '../../framework/utils';\r\n\r\nlet dialogRefCount = 0;\r\n\r\n/**\r\n * Represents the modal backdrop.\r\n */\r\n@Component({\r\n    selector: 'modal-backdrop',\r\n    host: {\r\n        '[class.in-element]': 'dialog.inElement',\r\n        '[style.position]': 'hs.ps',\r\n        '[style.height]': 'hs.sz',\r\n        '[style.width]': 'hs.sz',\r\n        '[style.top]': 'hs.pt',\r\n        '[style.left]': 'hs.pt',\r\n        '[style.right]': 'hs.pt',\r\n        '[style.bottom]': 'hs.pt',\r\n        '(body:keydown)': 'documentKeypress($event)'\r\n    },\r\n    styleUrls: [\r\n        'components/angular2-modal/plugins/vex/modal-backdrop.css'\r\n    ],\r\n    encapsulation: ViewEncapsulation.None,\r\n    template:\r\n`<div [class]=\"cssClass\">\r\n    <div [class]=\"dialog.context.overlayClassName\"></div>\r\n    <modal-content></modal-content>    \r\n</div>`\r\n})\r\nexport class VexModalBackdrop implements OnDestroy {\r\n    private hs: any = {};\r\n\r\n    constructor(\r\n        private dialog: DialogRef<VEXModalContext>,\r\n        private _modal: Modal) {\r\n        dialogRefCount++;\r\n        document.body.classList.add('vex-open');\r\n\r\n        if (dialog.inElement) {\r\n            this.hs.ps = 'absolute';\r\n            this.hs.sz = '100%';\r\n            this.hs.pt = 0;\r\n        }\r\n    }\r\n\r\n    get cssClass(): string {\r\n        return `vex vex-theme-${this.dialog.context.className}`;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (--dialogRefCount === 0) {\r\n            document.body.classList.remove('vex-open');\r\n        }\r\n    }\r\n\r\n    documentKeypress(event: KeyboardEvent) {\r\n        // check that this modal is the last in the stack.\r\n        if (!this._modal.isTopMost(this.dialog)) return;\r\n\r\n        if (supportsKey(event.keyCode, <any>this.dialog.context.keyboard)) {\r\n            this.dialog.dismiss();\r\n        }\r\n    }\r\n}\r\n"]}