{"version":3,"file":"deam-head.js","sourceRoot":"","sources":["deam-head.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAQO,eAAe,CAAC,CAAA;AA8BvB;IAAA;QAMY,gBAAW,GAAmC,IAAI,mBAAY,EAAoB,CAAC;IAmB/F,CAAC;IAfC,0BAAO,GAAP,UAAQ,KAAY,EAAE,GAA2B;QAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,YAAK;YACL,MAAM,EAAE,GAAG;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACpC,CAAC;IAEO,gCAAa,GAArB,UAAsB,MAA+B;QAArD,iBAMC;QALC,MAAM,CAAC,IAAI,CAAC,UAAC,aAAa;YACxB,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;gBACtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,CAAC,EAAE,cAAM,OAAA,KAAI,CAAC,MAAM,GAAG,WAAW,EAAzB,CAAyB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAtBD;QAAC,YAAK,EAAE;;2CAAA;IACR;QAAC,YAAK,EAAE;;iDAAA;IACR;QAAC,YAAK,EAAE;;mDAAA;IAER;QAAC,aAAM,EAAE;;iDAAA;IACT;QAAC,gBAAS,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;;gDAAA;IAxBlD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,MAAM,EAAE;gBACN,uPASG;aACJ;YACD,WAAW,EAAE,mCAAmC;YAChD,aAAa,EAAE,wBAAiB,CAAC,QAAQ;SAC1C,CAAC;;gBAAA;IA0BF,eAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,gBAAQ,WAyBpB,CAAA","sourcesContent":["import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { DialogRef } from '../../../components/angular2-modal';\r\n\r\nexport interface ModalCommandDescriptor {\r\n  text: string;\r\n  factory: () => Promise<DialogRef<any>>;\r\n}\r\nexport interface DropInClickEvent {\r\n  event: Event;\r\n  source: ModalCommandDescriptor;\r\n}\r\n\r\n@Component({\r\n  selector: 'demo-head',\r\n  styles: [\r\n    `\r\n      .btn-dropin {\r\n          text-transform: uppercase;\r\n          margin: 15px;\r\n          background-color: #219161;\r\n          border: none;\r\n          box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\r\n          border-radius: 0;\r\n      }\r\n      `\r\n  ],\r\n  templateUrl: 'demo/app/demo-head/demo-head.html',\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class DemoHead {\r\n  result: any;\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() modalCommands: ModalCommandDescriptor[];\r\n\r\n  @Output() dropInClick: EventEmitter<DropInClickEvent> = new EventEmitter<DropInClickEvent>();\r\n  @ViewChild('commands', {read: ViewContainerRef}) public vcCommands: ViewContainerRef;\r\n\r\n\r\n  onClick(event: Event, btn: ModalCommandDescriptor) {\r\n    this.dropInClick.emit({\r\n      event,\r\n      source: btn\r\n    });\r\n    this.processDialog(btn.factory());\r\n  }\r\n\r\n  private processDialog(dialog: Promise<DialogRef<any>>) {\r\n    dialog.then((resultPromise) => {\r\n      return resultPromise.result.then((result) => {\r\n        this.result = result;\r\n      }, () => this.result = 'Rejected!');\r\n    });\r\n  }\r\n}\r\n"]}