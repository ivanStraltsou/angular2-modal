{"version":3,"file":"presets.js","sourceRoot":"","sources":["presets.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    DialogFormModal,\r\n    DropInPresetBuilder,\r\n    Modal\r\n} from '../../../components/angular2-modal/plugins/vex';\r\n\r\nexport function alert(modal: Modal): DropInPresetBuilder {\r\n    return modal.alert()\r\n        .className(this.theme)\r\n        .message('An alert message!')\r\n        .showCloseButton(true);\r\n}\r\n\r\nexport function prompt(modal: Modal): DropInPresetBuilder {\r\n    return modal.prompt()\r\n        .className(this.theme)\r\n        .message('Please type a value!')\r\n        .placeholder('This is a placeholder');\r\n}\r\n\r\nexport function confirm(modal: Modal): DropInPresetBuilder {\r\n    return modal.confirm()\r\n        .className(this.theme)\r\n        .message('Yes or No?')\r\n        .okBtn('Yes')\r\n        .cancelBtn('No');\r\n}\r\n\r\nexport function noButtons(modal: Modal): DropInPresetBuilder {\r\n    return modal.alert()\r\n        .className(this.theme)\r\n        .showCloseButton(true)\r\n        .isBlocking(true)\r\n        .message('Luckily I have an X button, phew...')\r\n        .okBtn(null)\r\n        .cancelBtn(null);\r\n\r\n}\r\n\r\nexport function customButtons(modal: Modal): DropInPresetBuilder {\r\n    return modal.alert()\r\n        .className(this.theme)\r\n        .showCloseButton(true)\r\n        .isBlocking(true)\r\n        .message(`Let's show some bootstrap style buttons...`)\r\n        .okBtn(null)\r\n        .cancelBtn(null)\r\n        .addButton('btn-primary', 'BTN-PRIMARY',\r\n            (cmp: DialogFormModal, $event: MouseEvent) => cmp.dialog.close('primary'))\r\n        .addButton('btn-warning', 'BTN-WARNING',\r\n            (cmp: DialogFormModal, $event: MouseEvent) => cmp.dialog.close('warning'))\r\n        .addButton('btn-success', 'BTN-SUCCESS',\r\n                (cmp: DialogFormModal, $event: MouseEvent) => cmp.dialog.close('success'));\r\n\r\n}\r\n\r\nexport function cascading(modal: Modal): DropInPresetBuilder {\r\n    let presets = [];\r\n\r\n    presets.push(alert.call(this, modal));\r\n    presets.push(prompt.call(this, modal));\r\n    presets.push(confirm.call(this, modal));\r\n    presets.push(\r\n        modal.alert()\r\n            .className(this.theme)\r\n            .message('Cascading modals! Find your way out...')\r\n    );\r\n\r\n    return <any>{\r\n        open: () => {\r\n            let ret = presets.shift().open();\r\n            while (presets.length > 0) presets.shift().open();\r\n            return ret;\r\n        }\r\n    };\r\n}\r\n"]}