{"version":3,"file":"js-native-preset.js","sourceRoot":"","sources":["js-native-preset.ts"],"names":[],"mappings":";;;;;;AAEA,sBAAsB,UAAU,CAAC,CAAA;AAEjC,8BAGO,kBAAkB,CAAC,CAAA;AAE1B;IAA2C,yCAAiD;IAExF,+BAAY,KAAY,EAAE,UAAwB;QAC9C,kBAAW,EAAC,YAAK,EAAE,sBAAU,EAAC,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG;IACO,4CAAY,GAAtB,UAAuB,MAA4B;QAC/C,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,oCAAI,GAAJ,UAAK,aAAgC;QACjC,IAAI,MAAM,GAAyB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,KAAK,YAAY,aAAK,CAAE,CAAC,CAAC,CAAC;YACrC,MAAM,CAAM,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC,CAAC;QACzF,CAAC;QAED,IAAI,QAAQ,GAAG,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACpF,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAO,IAAI,CAAC,CAAC;IACrE,CAAC;IACL,4BAAC;AAAD,CAAC,AA7BD,CAA2C,2CAA2B,GA6BrE;AA7BY,6BAAqB,wBA6BjC,CAAA","sourcesContent":["import { ViewContainerRef, ResolvedReflectiveProvider } from '@angular/core';\r\nimport { DialogRef, DROP_IN_TYPE } from '../../../../../components/angular2-modal';\r\nimport { Modal } from '../modal';\r\n\r\nimport {\r\n    JSNativeModalContext,\r\n    JSNativeModalContextBuilder\r\n} from '../modal-context';\r\n\r\nexport class JSNativePresetBuilder extends JSNativeModalContextBuilder<JSNativeModalContext> {\r\n    \r\n    constructor(modal: Modal, dialogType: DROP_IN_TYPE) {\r\n        super(<any>{modal, dialogType});\r\n    }\r\n\r\n    /**\r\n     * Hook to alter config and return bindings.\r\n     * @param config\r\n     */\r\n    protected $$beforeOpen(config: JSNativeModalContext): ResolvedReflectiveProvider[] {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Open a modal window based on the configuration of this config instance.\r\n     * @param viewContainer If set opens the modal inside the supplied viewContainer\r\n     * @returns Promise<DialogRef>\r\n     */\r\n    open(viewContainer?: ViewContainerRef): Promise<DialogRef<JSNativeModalContext>> {\r\n        let config: JSNativeModalContext = this.toJSON();\r\n\r\n        if (! (config.modal instanceof Modal) ) {\r\n            return <any>Promise.reject(new Error('Configuration Error: modal service not set.'));\r\n        }\r\n\r\n        let bindings = typeof this.$$beforeOpen === 'function' && this.$$beforeOpen(config);\r\n        return config.modal.open(<any>true, config, bindings, <any>true);\r\n    }\r\n}\r\n\r\n"]}