{"version":3,"file":"custom-modal-sample.js","sourceRoot":"","sources":["custom-modal-sample.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAE1C,+BAA0C,uCAAuC,CAAC,CAAA;AAClF,sBAA+B,+DAA+D,CAAC,CAAA;AAE/F;IAAiD,+CAAc;IAC7D,qCAAmB,IAAY,EAAS,IAAY;QAClD,iBAAO,CAAC;QADS,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;IAEpD,CAAC;IACH,kCAAC;AAAD,CAAC,AAJD,CAAiD,sBAAc,GAI9D;AAJY,mCAA2B,8BAIvC,CAAA;AAED;;GAEG;AAuCH;IAKE,iCAAmB,MAA8C;QAA9C,WAAM,GAAN,MAAM,CAAwC;QAC/D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,yCAAO,GAAP,UAAQ,KAAK;QACX,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAGD,+CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,6CAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IA5DH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,MAAM,EAAE,CAAC,icAcN,CAAC;YACJ,+FAA+F;YAC/F,sBAAsB;YACtB,oBAAoB,CAAC,QAAQ,EAAE,m5BAiBlB;SACd,CAAC;;+BAAA;IAwBF,8BAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,+BAAuB,0BAuBnC,CAAA","sourcesContent":["import { Component } from '@angular/core';\r\n\r\nimport { DialogRef, ModalComponent } from '../../../../components/angular2-modal';\r\nimport { BSModalContext } from '../../../../components/angular2-modal/plugins/bootstrap/index';\r\n\r\nexport class AdditionCalculateWindowData extends BSModalContext {\r\n  constructor(public num1: number, public num2: number) {\r\n    super();\r\n  }\r\n}\r\n\r\n/**\r\n * A Sample of how simple it is to create a new window, with its own injects.\r\n */\r\n@Component({\r\n  selector: 'modal-content',\r\n  styles: [`\r\n        .custom-modal-container {\r\n            padding: 15px;\r\n        }\r\n\r\n        .custom-modal-header {\r\n            background-color: #219161;\r\n            color: #fff;\r\n            -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\r\n            -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\r\n            box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\r\n            margin-top: -15px;\r\n            margin-bottom: 40px;\r\n        }\r\n    `],\r\n  //TODO: [ngClass] here on purpose, no real use, just to show how to workaround ng2 issue #4330.\r\n  // Remove when solved.\r\n  /* tslint:disable */ template: `\r\n        <div class=\"container-fluid custom-modal-container\">\r\n            <div class=\"row custom-modal-header\">\r\n                <div class=\"col-sm-12\">\r\n                    <h1>A Custom modal design</h1>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" [ngClass]=\"{'myclass' : shouldUseMyClass}\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"jumbotron\">\r\n                        <h1>Do the math to quit:</h1>\r\n                        <p class=\"lead\">I received an injection of the number <strong>{{context.num1}}</strong> and the number <strong>{{context.num2}}</strong></p>\r\n                        <span>What is the sum?</span>\r\n                         <input class=\"form-control\" type=\"text\" #answer (keyup)=\"onKeyUp(answer.value)\" autofocus>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>`\r\n})\r\nexport class AdditionCalculateWindow implements ModalComponent<AdditionCalculateWindowData> {\r\n  context: AdditionCalculateWindowData;\r\n\r\n  public wrongAnswer: boolean;\r\n\r\n  constructor(public dialog: DialogRef<AdditionCalculateWindowData>) {\r\n    this.context = dialog.context;\r\n    this.wrongAnswer = true;\r\n  }\r\n\r\n  onKeyUp(value) {\r\n    this.wrongAnswer = value != 5;\r\n    this.dialog.close();\r\n  }\r\n\r\n\r\n  beforeDismiss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  beforeClose(): boolean {\r\n    return this.wrongAnswer;\r\n  }\r\n}\r\n"]}