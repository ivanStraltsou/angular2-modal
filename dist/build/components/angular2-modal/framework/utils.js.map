{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;AACH,gBAA0B,EAAO,EAAE,EAAO;IACxC,IAAI,CAAC,GAAS,EAAE,CAAC;IACjB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAE,CAAC,IAAI,CAAC,GAAS,EAAG,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAE,CAAC,IAAI,CAAC,GAAS,EAAG,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,CAAC,CAAC;AACX,CAAC;AAfe,cAAM,SAerB,CAAA;AAED;;;;;GAKG;AACH,oBAA8B,IAAW,EAAE,IAAW;IACpD,MAAM,CAAC,IAAI;SACR,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC,CAAC;AAEtD,CAAC;AAJe,kBAAU,aAIzB,CAAA;AAED;;;;GAIG;AACH,qBAA4B,OAAe,EAAE,MAAqB;IAChE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAAC,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;IAClE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC;AAHe,mBAAW,cAG1B,CAAA;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,uBAA8B,GAA8B;IAC1D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC;SACnC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAG,CAAC,SAAI,GAAG,CAAC,CAAC,CAAC,CAAE,EAAhB,CAAgB,CAAC;SAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,oCAAoC;IACpC,6CAA6C;IAC7C,0BAA0B;IAC1B,0BAA0B;AAC5B,CAAC;AATe,qBAAa,gBAS5B,CAAA;AAED;IAKE;QALF,iBAWC;QALG,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;YAClC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,uBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,wBAAgB,mBAW5B,CAAA;AAED,kBAAyB,CAAC;AAAV,YAAI,OAAM,CAAA","sourcesContent":["/**\r\n * Simple object extend\r\n * @param m1\r\n * @param m2\r\n * @returns {{}}\r\n */\r\nexport function extend<T>(m1: any, m2: any): T {\r\n  var m: T = <T>{};\r\n  for (var attr in m1) {\r\n    if (m1.hasOwnProperty(attr)) {\r\n      (<any>m)[attr] = (<any>m1)[attr];\r\n    }\r\n  }\r\n\r\n  for (var attr in m2) {\r\n    if (m2.hasOwnProperty(attr)) {\r\n      (<any>m)[attr] = (<any>m2)[attr];\r\n    }\r\n  }\r\n\r\n  return m;\r\n}\r\n\r\n/**\r\n * Simple, not optimized, array union of unique values.\r\n * @param arr1\r\n * @param arr2\r\n * @returns {T[]|any[]|any[][]|any[]}\r\n */\r\nexport function arrayUnion<T>(arr1: any[], arr2: any[]): T[] {\r\n  return arr1\r\n    .concat(arr2.filter(v => arr1.indexOf(v) === -1));\r\n\r\n}\r\n\r\n/**\r\n * Returns true if the config supports a given key.\r\n * @param key\r\n * @returns {boolean}\r\n */\r\nexport function supportsKey(keyCode: number, config: Array<number>): boolean {\r\n  if (!Array.isArray(config)) return config === null ? false : true;\r\n  return config.indexOf(keyCode) > -1;\r\n}\r\n\r\n/**\r\n * Given an object representing a key/value map of css properties, returns a valid css string\r\n * representing the object.\r\n * Example:\r\n * console.log(toStyleString({\r\n *     position: 'absolute',\r\n *     width: '100%',\r\n *     height: '100%',\r\n *     top: '0',\r\n *     left: '0',\r\n *     right: '0',\r\n *     bottom: '0'\r\n * }));\r\n * // position:absolute;width:100%;height:100%;top:0;left:0;right:0;bottom:0\r\n * @param obj\r\n * @returns {string}\r\n */\r\nexport function toStyleString(obj: any | CSSStyleDeclaration): string {\r\n  return Object.getOwnPropertyNames(obj)\r\n    .map(k => `${k}:${obj[k]}`)\r\n    .join(';');\r\n\r\n  // let objStr = JSON.stringify(obj);\r\n  // return objStr.substr(1, objStr.length - 2)\r\n  //     .replace(/,/g, ';')\r\n  //     .replace(/\"/g, '');\r\n}\r\n\r\nexport class PromiseCompleter<R> {\r\n  promise: Promise<R>;\r\n  resolve: (value?: R|PromiseLike<R>) => void;\r\n  reject: (error?: any, stackTrace?: string) => void;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((res, rej) => {\r\n      this.resolve = res;\r\n      this.reject = rej;\r\n    });\r\n  }\r\n}\r\n\r\nexport function noop() { }\r\n"]}